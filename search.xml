<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>常用网站</title>
      <link href="/2020/08/22/weblist/"/>
      <url>/2020/08/22/weblist/</url>
      
        <content type="html"><![CDATA[<h3 id="设计类网站"><a href="#设计类网站" class="headerlink" title="设计类网站"></a>设计类网站</h3><p><strong>1. 配色类网站</strong></p><ul><li><a href="https://www.webdesignrankings.com/resources/lolcolors/">LOLCOLORS</a></li><li><a href="https://color.adobe.com/zh/explore/newest/?page=2">Adobe Color</a></li><li><a href="https://flatuicolors.com/">flatuicolors</a></li><li><a href="https://www.colorsandfonts.com/index.html">灵感配色</a></li><li><a href="http://zhongguose.com/">中国色</a></li><li><a href="https://mycolor.space/">自动配色</a></li><li><a href="https://vanschneider.com/colors">预设颜色组</a></li><li><a href="https://www.colordrop.io/">colordrop</a></li></ul><p><strong>2. fonts 类网站</strong></p><ul><li><a href="http://www.fonts.net.cn/">字体天下</a></li><li><a href="https://fontsup.com/">免费字体下载</a></li><li><a href="https://ziyouziti.com/">自由字体</a></li><li><a href="https://izihun.com/">字魂</a></li></ul><p><strong>3. icons 类网站</strong></p><ul><li><a href="https://prototypr.io/time-machine/">设计工具时光机</a></li><li><a href="https://www.iconfont.cn/">阿里巴巴矢量图标库</a></li><li><a href="https://iconstore.co/">免费图标库</a></li><li><a href="http://www.fontawesome.com.cn/faicons/">Font Awesome</a></li><li><a href="https://mixkit.co/art/">插画素材网</a></li><li><a href="https://www.uistore.design/">UI</a></li></ul><p><strong>4. 其他类网站</strong></p><ul><li><a href="https://www.remove.bg/zh">在线抠图</a></li><li><a href="https://www.ls.graphics/free">设计资源</a></li><li><a href="https://isoflat.com/">2.5d 风格矢量素材库</a></li><li><a href="https://paveldogreat.github.io/WebGL-Fluid-Simulation/">流体模拟</a></li><li><a href="http://www.jq22.com/">jquery 官网</a></li><li><a href="https://iradesign.io/">免费商用矢量插画素材</a></li><li><a href="https://www.kapwing.com/404-illustrations">404 页面插画素材库</a></li><li><a href="https://gracg.com/">涂鸦王国</a></li><li><a href="http://www.egouz.com/pics/vector/">EGOUZ</a></li><li><a href="http://art.cgart.cn/">画易网</a></li><li><a href="http://tu.arting365.com/category/41">ARTING365</a></li><li><a href="https://www.fotosearch.com/">FOTOSEARCH</a></li><li><a href="https://wallroom.io/">Wallroom</a></li><li><a href="https://www.pixiv.net/">P 站</a></li><li><a href="https://www.artstation.com/">Artstation</a></li><li><a href="https://method.ac/">Method</a></li></ul><h3 id="创作类网站"><a href="#创作类网站" class="headerlink" title="创作类网站"></a>创作类网站</h3><p><strong>1. 在线编辑类网站</strong></p><ul><li><a href="https://c.runoob.com/more/shapefly-diagram/#">在线流程图</a></li><li><a href="https://www.sojson.com/">js 在线运行</a></li><li><a href="https://github.com/YeDaxia/JApiDocs">代码自动生成文档</a></li><li><a href="http://patorjk.com/software/taag">文字生成字符</a></li><li><a href="https://jinaconvert.com/cn/convert-to-ico.php">在线图片转换</a></li><li><a href="https://carbon.now.sh/">代码块生成图片</a></li><li><a href="https://browserframe.com/">网页快速生成截图</a></li></ul><p><strong>2. 视频创作类网站</strong></p><ul><li><a href="https://tableconvert.com/">在线表格转换格式</a></li><li><a href="https://www.toolnb.com/">爱资料工具</a></li><li><a href="https://panzoid.com/">视频片头动画下载</a></li><li><a href="https://www.ear0.com/">音频下载</a></li><li><a href="https://mixkit.co/">pr 模板下载</a></li><li><a href="https://github.com/bytedance/xgplayer">h5 视频插件</a></li><li><a href="https://www.videezy.com/">videezy</a></li><li><a href="https://www.egouz.com/">国外导航</a></li><li><a href="http://mazwai.com/">mazwai</a></li><li><a href="https://www.monzoom.com/">monzoom</a></li><li><a href="https://wedistill.io/">Distill beta</a></li><li><a href="https://footagecrate.com/">footagecrate</a></li></ul><p><strong>3. 音乐创作类网站</strong></p><ul><li><a href="https://www.amplesound.net/en/download.asp">Amplesound</a></li><li><a href="http://www.dontcrack.com/freeware/downloads.php/id/5221/software/Spicy-Guitar/">Spicy Guitar</a></li><li><a href="http://www.vst4free.com/free_vst.php?id=2848">Keyzone Classic</a></li><li><a href="https://studiovoice.msxiaobing.com/">x studio</a></li></ul><h3 id="其他类网站"><a href="#其他类网站" class="headerlink" title="其他类网站"></a>其他类网站</h3><p><strong>1. 验证类</strong></p><ul><li><a href="http://24mail.chacuo.net/">临时邮箱</a></li><li><a href="www.materialtools.com/">临时接收手机验证码</a></li><li><a href="https://monitor.firefox.com/">邮箱隐私泄露查询</a></li><li><a href="https://haveibeenpwned.com/">邮箱泄露查询</a></li></ul><p><strong>2. 软件类</strong></p><ul><li><a href="https://www.postman.com/downloads/">Postman</a></li><li><a href="http://www.chromestore.cn/2018/09/18/sourcegraph/">Chromestore</a></li><li><a href="https://www.wikihow.com/">如何做任何事</a></li><li><a href="http://lackar.com/aa/">网站收录</a></li><li><a href="https://x6ud.github.io/#/">动物头部骨骼比例</a></li><li><a href="https://billing.virmach.com/">云服务器</a></li><li><a href="http://www.bandizip.com/">解压缩软件</a></li><li><a href="https://www.u.tools/download.html">Utools</a></li><li><a href="https://subhra74.github.io/xdm/#downloads">XDM</a></li><li><a href="https://www.freedownloadmanager.org/zh/">FDM</a></li><li><a href="https://crxdl.com/">Chrome 离线插件下载</a></li><li><a href="https://greasyfork.org/zh-CN/scripts">脚本</a></li><li><a href="https://dust3d.org/">Dust3D</a></li></ul><h3 id="加速器类网站"><a href="#加速器类网站" class="headerlink" title="加速器类网站"></a>加速器类网站</h3><ul><li><a href="https://www.lpjsq.cn/">蓝泡网游加速器</a></li><li><a href="https://www.liuxing.com/">流星游戏加速器</a></li><li><a href="https://www.qimiao.com/">奇妙加速器</a></li></ul><h3 id="引擎类网站"><a href="#引擎类网站" class="headerlink" title="引擎类网站"></a>引擎类网站</h3><p><strong>1. 搜索引擎类网站</strong></p><ul><li><a href="https://goobe.io/">goobe</a></li><li><a href="https://m.mijisou.com/">秘迹搜索</a></li><li><a href="https://www.zoomeye.org/">钟馗之眼</a></li><li><a href="https://www.luomapan.com/">罗马盘</a></li><li><a href="https://yandex.com/">yandex 搜索</a></li><li><a href="https://magi.com/">AI 学习引擎</a></li><li><a href="http://www.wujiesou.com/">无解搜</a></li></ul><p><strong>2. 游戏引擎类网站</strong></p><ul><li><a href="https://www.evkworld.com/?c=600010&amp;sc=600033">唤境</a></li><li><a href="https://docs.egret.com/engine">Egret Engine</a></li><li><a href="https://store.steampowered.com/search/?developer=GameLooper">GameLooper</a></li><li><a href="https://www.kodugamelab.com/">Kodu</a></li></ul><h3 id="兼职类网站"><a href="#兼职类网站" class="headerlink" title="兼职类网站"></a>兼职类网站</h3><p><strong>1. 接单平台</strong></p><ul><li><a href="https://www.proginn.com/">程序员客栈</a></li><li><a href="https://www.yuanjisong.com/">猿急送</a></li><li><a href="https://mart.coding.net/">码市</a></li><li><a href="https://www.upwork.com/">upwork</a></li><li><a href="https://www.freelancer.com/">freelancer</a></li><li><a href="https://dribbble.com/">dribbble</a></li><li><a href="https://stackoverflow.com/">stackoverflow</a></li><li><a href="https://99designs.com/">99designs</a></li><li><a href="https://remoteok.io/open">remoteok</a></li><li><a href="https://angel.co/company/angellist">angel</a></li><li><a href="https://developer.huawei.com/consumer/cn/hms/">华为终端云服务</a></li></ul><p><strong>2. 在线代码编辑</strong></p><ul><li><a href="https://codesandbox.io/dashboard/recent">Codesandbox</a></li><li><a href="https://codepen.io/">Codepen</a></li><li><a href="https://www.jsdelivr.com/">cdn 在线生成</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Website-summary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> website </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站文章导航</title>
      <link href="/2020/08/22/guide/"/>
      <url>/2020/08/22/guide/</url>
      
        <content type="html"><![CDATA[<h3 id="网站搭建"><a href="#网站搭建" class="headerlink" title="网站搭建"></a>网站搭建</h3><ul><li><a href="Pt-structure.md">hexo 项目结构</a></li><li><a href="website-con.md">Hexo 使用 matery 主题搭建博客并深度优化</a></li><li><a href="codeCom-spider.md">Hexo 使用字蛛插件优化网站字体</a></li><li><a href="mindmap.md">Hexo 中使用思维导图</a></li><li><a href="wordcount-link.md">Hexo 优化中文链接转拼音和字数统计</a></li><li><a href="chat.md">Hexo 搭建客服在线聊天功能</a></li><li><a href="live2dConf.md">Hexo 添加 live2d</a></li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><ul><li><a href="flex-layout.md">flex 实现响应式布局</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Website-guide </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Guider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo思维导图使用</title>
      <link href="/2020/08/22/mindmap/"/>
      <url>/2020/08/22/mindmap/</url>
      
        <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li><a href="https://github.com/HunterXuan/hexo-simple-mindmap">mindmap github 仓库</a></li></ul><h3 id="操作指南"><a href="#操作指南" class="headerlink" title="操作指南"></a>操作指南</h3><p><strong>1、安装插件，在 hexo 根目录下执行如下代码：</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-simple-mindmap</code></pre><p><strong>2、在.md 文件中使用</strong></p><blockquote class="pullquote mindmap mindmap-md"><ul><li><a href="https://github.com/HunterXuan/hexo-simple-mindmap">hexo 思维导图使用</a><ul><li>前言</li><li>操作指南<ul><li>准备需要的文件</li><li>为主题添加 CSS/JS 文件</li></ul></li><li>使用方法</li></ul></li></ul></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Plug-ins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mindmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>live2d看板娘配置</title>
      <link href="/2020/08/22/live2dconf/"/>
      <url>/2020/08/22/live2dconf/</url>
      
        <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p><strong>1. 前提</strong></p><ul><li>Node.js version 10.0+</li><li>git</li></ul><p><strong>2. 链接</strong></p><ul><li><a href="https://github.com/fghrsh/live2d_demo">live2d</a></li><li><a href=""></a></li><li><a href=""></a></li></ul><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p><strong>1、修</strong></p><pre class=" language-cmd"><code class="language-cmd"></code></pre><p><strong>2、创</strong></p><pre class=" language-bash"><code class="language-bash"></code></pre><p><strong>3、项目结构</strong></p><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p><strong>1、下</strong></p><pre class=" language-bash"><code class="language-bash"></code></pre><p><strong>2、修</strong></p><pre class=" language-yml"><code class="language-yml"></code></pre><ul><li>其他设置：</li></ul><pre class=" language-yml"><code class="language-yml"></code></pre><p><strong>3、新建页面</strong></p><ul><li>执行如下命令，创建页面：</li></ul><pre class=" language-bash"><code class="language-bash"></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Plug-ins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gulp压缩静态资源和字体压缩</title>
      <link href="/2020/08/22/codecom-spider/"/>
      <url>/2020/08/22/codecom-spider/</url>
      
        <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p><strong>1. 前提</strong></p><ul><li>HEXO-THEME-MATERY</li><li>Node.js</li></ul><p><strong>2. 相关链接</strong></p><ul><li><a href="https://www.gulpjs.com.cn/">Gulp 官网</a></li><li><a href="https://github.com/aui/font-spider">spider github 仓库</a></li><li><a href="https://www.font-spider.org/">font-spider 官网</a></li></ul><h3 id="代码压缩-推荐"><a href="#代码压缩-推荐" class="headerlink" title="代码压缩(推荐)"></a>代码压缩(推荐)</h3><p><strong>1、全局安装 gulp,在项目根目录下执行如下命令:</strong></p><pre class=" language-cmd"><code class="language-cmd"># 全局安装gulp模块cnpm install gulp -g# 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行cnpm install gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save# 额外的功能模块cnpm install gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save</code></pre><p><strong>2、在 hexo 根目录中创建一个新文件 gulpfile.js 并将以下内容复制到文件中，内附有中文注释，可根据您的需要进行修改</strong></p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token keyword">var</span> debug <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-debug'</span><span class="token punctuation">)</span><span class="token keyword">var</span> cleancss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-clean-css'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//css压缩组件</span><span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-uglify'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//js压缩组件</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlmin'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//html压缩组件</span><span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlclean'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//html清理组件</span><span class="token keyword">var</span> imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-imagemin'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//图片压缩组件</span><span class="token keyword">var</span> changed <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-changed'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//文件更改校验组件</span><span class="token keyword">var</span> gulpif <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-if'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//任务 帮助调用组件</span><span class="token keyword">var</span> plumber <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-plumber'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//容错组件（发生错误不跳出任务，并报出错误内容）</span><span class="token keyword">var</span> isScriptAll <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span><span class="token keyword">var</span> isDebug <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">//是否调试显示 编译通过的文件</span><span class="token keyword">var</span> gulpBabel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-babel'</span><span class="token punctuation">)</span><span class="token keyword">var</span> es2015Preset <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'babel-preset-es2015'</span><span class="token punctuation">)</span><span class="token keyword">var</span> del <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'del'</span><span class="token punctuation">)</span><span class="token keyword">var</span> Hexo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'hexo'</span><span class="token punctuation">)</span><span class="token keyword">var</span> hexo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hexo</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 初始化一个hexo对象</span><span class="token comment" spellcheck="true">// 清除public文件夹</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'clean'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'public/**/*'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span><span class="token comment" spellcheck="true">// 创建静态页面 （等同 hexo generate）</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'generate'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> hexo            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">'generate'</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                watch<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 启动Hexo服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'server'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> hexo        <span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">'server'</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'deploy'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> hexo            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">'deploy'</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                watch<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 压缩public目录下的js文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'compressJs'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/*.js'</span><span class="token punctuation">,</span> <span class="token string">'!./public/libs/**'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">/</span>排除的js        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> title<span class="token punctuation">:</span> <span class="token string">'Compress JS:'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>            <span class="token function">gulpBabel</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                presets<span class="token punctuation">:</span> <span class="token punctuation">[</span>es2015Preset<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> es5检查机制            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">/</span><span class="token function">调用压缩组件方法uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>对合并的文件进行压缩        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">/</span>输出到目标目录<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token operator">/</span> 压缩<span class="token keyword">public</span>目录下的css文件gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'compressCss'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        rebase<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token operator">/</span><span class="token operator">/</span>advanced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span>类型：Boolean 默认：<span class="token boolean">true</span> <span class="token punctuation">[</span>是否开启高级优化（合并选择器等）<span class="token punctuation">]</span>        compatibility<span class="token punctuation">:</span> <span class="token string">'ie7'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span>保留ie7及以下兼容写法 类型：String 默认：<span class="token string">''</span>or<span class="token string">'*'</span> <span class="token punctuation">[</span>启用兼容模式； <span class="token string">'ie7'</span>：IE7兼容模式，<span class="token string">'ie8'</span>：IE8兼容模式，<span class="token string">'*'</span>：IE9<span class="token operator">+</span>兼容模式<span class="token punctuation">]</span>        <span class="token operator">/</span><span class="token operator">/</span>keepBreaks<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span>类型：Boolean 默认：<span class="token boolean">false</span> <span class="token punctuation">[</span>是否保留换行<span class="token punctuation">]</span>        <span class="token operator">/</span><span class="token operator">/</span>keepSpecialComments<span class="token punctuation">:</span> <span class="token string">'*'</span> <span class="token operator">/</span><span class="token operator">/</span>保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/*.css'</span><span class="token punctuation">,</span> <span class="token string">'!./public/**/*.min.css'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//排除的css</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> title<span class="token punctuation">:</span> <span class="token string">'Compress CSS:'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleancss</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 压缩public目录下的html文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'compressHtml'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> cleanOptions <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        protect<span class="token punctuation">:</span> <span class="token regex">/&lt;\!--%fooTemplate\b.*?%-->/g</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//忽略处理</span>        unprotect<span class="token punctuation">:</span> <span class="token regex">/&lt;script [^>]*\btype="text\/x-handlebars-template"[\s\S]+?&lt;\/script>/gi</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//特殊处理</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> minOption <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        collapseWhitespace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩HTML</span>        collapseBooleanAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//省略布尔属性的值 &lt;input checked="true"/> ==> &lt;input /></span>        removeEmptyAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除所有空格作属性值 &lt;input id="" /> ==> &lt;input /></span>        removeScriptTypeAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除&lt;script>的type="text/javascript"</span>        removeStyleLinkTypeAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除&lt;style>和&lt;link>的type="text/css"</span>        removeComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//清除HTML注释</span>        minifyJS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩页面JS</span>        minifyCSS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩页面CSS</span>        minifyURLs<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//替换页面URL</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> title<span class="token punctuation">:</span> <span class="token string">'Compress HTML:'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span>cleanOptions<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span>minOption<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 压缩 public/medias 目录内图片</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'compressImage'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        optimizationLevel<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Number 默认：3 取值范围：0-7（优化等级）</span>        progressive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 无损压缩jpg图片</span>        interlaced<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span>        multipass<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 多次优化svg直到完全优化</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/medias/**/*.*'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">'./public/medias'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> title<span class="token punctuation">:</span> <span class="token string">'Compress Images:'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 执行顺序： 清除public目录 -> 产生原始博客内容 -> 执行压缩混淆 -> 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>    <span class="token string">'build'</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>        <span class="token string">'clean'</span><span class="token punctuation">,</span>        <span class="token string">'generate'</span><span class="token punctuation">,</span>        <span class="token string">'compressHtml'</span><span class="token punctuation">,</span>        <span class="token string">'compressCss'</span><span class="token punctuation">,</span>        <span class="token string">'compressJs'</span><span class="token punctuation">,</span>        <span class="token string">'compressImage'</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">'deploy'</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 默认任务</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>    <span class="token string">'default'</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>        <span class="token string">'clean'</span><span class="token punctuation">,</span>        <span class="token string">'generate'</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">'compressHtml'</span><span class="token punctuation">,</span> <span class="token string">'compressCss'</span><span class="token punctuation">,</span> <span class="token string">'compressJs'</span><span class="token punctuation">,</span> <span class="token string">'compressImage'</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</span></code></pre><ul><li>注意：这个加入了图片压缩，如果不想用图片压缩可以把第 154 行的 “compressImage”, 和第 165 行的 ,”compressImage” 去掉即可</li></ul><p><strong>3、执行压缩方式（二选一即可）</strong></p><ul><li>3.1 直接在 Hexo 根目录执行 gulp 或者 gulp default ，这个命令相当于 hexo cl&amp;&amp;hexo g 并且再把代码和图片压缩。</li></ul><pre class=" language-bash"><code class="language-bash">gulp<span class="token comment" spellcheck="true">#OR</span>gulp default <span class="token comment" spellcheck="true">#相当于 hexo cl&amp;&amp;hexo g</span></code></pre><ul><li>3.2 在 Hexo 根目录执行 gulp build</li></ul><pre class=" language-bash"><code class="language-bash">gulp build  <span class="token comment" spellcheck="true">#生成、压缩文件后并自动部署</span></code></pre><h3 id="字体压缩（Spider）"><a href="#字体压缩（Spider）" class="headerlink" title="字体压缩（Spider）"></a>字体压缩（Spider）</h3><p><strong>1、全局安装 spider,在项目根目录下执行如下命令:</strong></p><pre class=" language-cmd"><code class="language-cmd">cnpm install font-spider -g</code></pre><p><strong>2、在 CSS 中使用 webfont</strong></p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*声明 WebFont*/</span><span class="token atrule"><span class="token rule">@font-face</span> &amp;#123<span class="token punctuation">;</span></span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'pinghei'</span><span class="token punctuation">;</span>    <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url">url('../font/pinghei.eot')</span><span class="token punctuation">;</span>    <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url">url('../font/pinghei.eot?#font-spider')</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'embedded-opentype'</span><span class="token punctuation">)</span>, <span class="token url">url('../font/pinghei.woff')</span>            <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'woff'</span><span class="token punctuation">)</span>, <span class="token url">url('../font/pinghei.ttf')</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'truetype'</span><span class="token punctuation">)</span>, <span class="token url">url('../font/pinghei.svg')</span>            <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'svg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>    <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*使用选择器指定字体*/</span><span class="token number">.</span>home h<span class="token number">1</span>,<span class="token number">.</span>demo > <span class="token number">.</span>test &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'pinghei'</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><ul><li>特别说明： @font-face 中的 src 定义的 .ttf 文件必须存在，其余的格式将由工具自动生成</li></ul><p><strong>3、运行 font-spider</strong></p><pre class=" language-bash"><code class="language-bash">font-spider ./demo/*.html  <span class="token comment" spellcheck="true">#页面依赖的字体将会自动压缩好，原 .ttf 字体会备份</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Plug-ins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gulp </tag>
            
            <tag> Spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置客服功能</title>
      <link href="/2020/08/21/chat/"/>
      <url>/2020/08/21/chat/</url>
      
        <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li><a href="https://app.crisp.chat/initiate/signup/">crisp 官网</a></li></ul><h3 id="客服聊天窗口配置"><a href="#客服聊天窗口配置" class="headerlink" title="客服聊天窗口配置"></a>客服聊天窗口配置</h3><p><strong>1、在官网注册账号</strong></p><p><strong>2、注册完成后设置</strong></p><ul><li>登录刚才注册的账户——设置——网站设置——添加网站——Integrations。</li></ul><p><img src="/images/arc_img/1.png" alt="配置"></p><ul><li>比如：html 方式<ul><li>就是复制 JS 代码片段到你的到 head 标签里。</li></ul></li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>window<span class="token punctuation">.</span>$crisp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span>CRISP_WEBSITE_ID<span class="token operator">=</span><span class="token string">"c0e401ec-3f83-44f6-8acb-32637905848a"</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>d<span class="token operator">=</span>document<span class="token punctuation">;</span>s<span class="token operator">=</span>d<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token punctuation">.</span>src<span class="token operator">=</span><span class="token string">"https://client.crisp.chat/l.js"</span><span class="token punctuation">;</span>s<span class="token punctuation">.</span><span class="token keyword">async</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>d<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"head"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><strong>3、其他的设置</strong></p><ul><li>点击设置——网站设置，自己根据需要设置即可，比如显示位置，颜色，自己的头像等。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Plug-ins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo网站搭建及优化</title>
      <link href="/2020/08/21/website-con/"/>
      <url>/2020/08/21/website-con/</url>
      
        <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p><strong>1. 前提</strong></p><ul><li>Node.js version 10.0+</li><li>git</li></ul><p><strong>2. 链接</strong></p><ul><li><a href="https://hexo.io/docs/">Hexo 使用说明</a></li><li><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">Hexo-theme-matery</a></li><li><a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a></li><li><a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a></li><li><a href="https://github.com/willin/hexo-wordcount">wordcount</a></li><li><a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a></li><li><a href="https://github.com/Troy-Yang/hexo-lazyload-image">lazyload</a></li><li><a href="https://www.jsdelivr.com/">jsDelivr</a></li></ul><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p><strong>1、修改 NPM 镜像源,并安装 Hexo-cli，执行如下命令：</strong></p><pre class=" language-cmd"><code class="language-cmd">npm config set registry https://registry.npm.taobao.org #修改淘宝镜像源d:cd dev/workspace/hexo       #Enter the workspacecnpm install -g hexo-cli    #Install hexohexo init                   #Initialize projectcode .                      #Open project with VS Code</code></pre><p><strong>2、创建一个例子，并启动服务</strong></p><pre class=" language-bash"><code class="language-bash">hexo new <span class="token string">"hello"</span>  <span class="token comment" spellcheck="true">#创建名为hello的例子</span>hexo server   <span class="token comment" spellcheck="true">#启动服务</span></code></pre><ul><li>更多命令请参考<a href="https://hexo.io/docs/writing.html">Writing</a></li></ul><p><strong>3、项目结构</strong></p><blockquote class="pullquote mindmap mindmap-md"><ul><li>scaffolds #md mould</li><li>source/_ports #Articles and pages md</li><li>themes.hexo-theme-matery #themes<ul><li>source<ul><li>medias<ul><li>banner #banner img</li><li>featureimages #24 featured pictures</li></ul></li></ul></li><li>layout<ul><li>_partial<ul><li>footer.ejs #footer info</li><li>socila-link.ejs #Modify social links info</li><li>bg-cover-content.ejs #banner img change js</li></ul></li></ul></li><li>_config.yml #Topic related configuration</li></ul></li><li>_config.yml #hexo configuration</li></ul></blockquote><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p><strong>1、下载 matery 主题并解压，将解压后的文件复制到 hexo 的 themes 文件夹内</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><p><strong>2、修改 Hexo 根目录的 _config.yml 文件的 theme 值</strong></p><pre class=" language-yml"><code class="language-yml"># Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: hexo-theme-matery</code></pre><ul><li>其他设置：</li></ul><pre class=" language-yml"><code class="language-yml"># 修改分页## Set per_page to 0 to disable paginationper_page: 12pagination_dir: page# 修改语言language: zh-CN# 修改URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://github.com/willasas/willasas.github.io</code></pre><p><strong>3、新建页面</strong></p><ul><li>执行如下命令，创建页面：</li></ul><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span>  <span class="token comment" spellcheck="true">#新建分类页</span>hexo new page <span class="token string">"tags"</span>  <span class="token comment" spellcheck="true">#新建标签页</span>hexo new page <span class="token string">"about"</span>  <span class="token comment" spellcheck="true">#新建关于我页</span>hexo new page <span class="token string">"friends"</span>  <span class="token comment" spellcheck="true">#新建友情链接页（可选）</span></code></pre><ul><li>编辑分类页（/source/categories/index.md），添加如下内容：</li></ul><pre class=" language-md"><code class="language-md">---title: categoriesdate: 2020-07-30 15:37:34type: 'categories'layout: 'categories'---</code></pre><ul><li><p>其他页面的 index.md 文件内容同上，只需要将 title、type、layout 的值改成对应的页面名即可（例如 title: tags）</p></li><li><p>若新建了友情链接页面，则在 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json 文件，文件内容如下所示：</p></li></ul><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span>    &amp;#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"https://avatars1.githubusercontent.com/u/33866172?s=60&amp;v=4"</span><span class="token punctuation">,</span> //图标        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"willasas"</span><span class="token punctuation">,</span> //名称        <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"文章管理系统"</span><span class="token punctuation">,</span>        <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://willasas.github.io/ArticleManagementSystem/#/"</span><span class="token punctuation">,</span> //url        <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"着陆"</span> //标题    &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    &amp;#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"https://portrait.gitee.com/uploads/avatars/user/1619/4857389_aclor_1596096000.png!avatar30"</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"亚黎"</span><span class="token punctuation">,</span>        <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"国内请访问"</span><span class="token punctuation">,</span>        <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://gitee.com/aclor"</span><span class="token punctuation">,</span>        <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"着陆"</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">]</span></code></pre><h3 id="安装搜索功能-hexo-generator-search"><a href="#安装搜索功能-hexo-generator-search" class="headerlink" title="安装搜索功能(hexo-generator-search)"></a>安装搜索功能(hexo-generator-search)</h3><p><strong>1、安装搜索插件，命令如下：</strong></p><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> hexo-generator-search --save</code></pre><p><strong>2、在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</strong></p><pre><code>search:  path: search.xml  field: post</code></pre><h3 id="安装中文链接转拼音插件-推荐"><a href="#安装中文链接转拼音插件-推荐" class="headerlink" title="安装中文链接转拼音插件(推荐)"></a>安装中文链接转拼音插件(推荐)</h3><p><strong>1、安装命令如下：</strong></p><pre class=" language-terminal"><code class="language-terminal">cnpm i hexo-permalink-pinyin --save</code></pre><p><strong>2、在 hexo 根目录下的_config.yml 文件中，配置如下：</strong></p><pre class=" language-_config.yml"><code class="language-_config.yml">permalink_pinyin:  enable: true  separator: '-' # default: '-'</code></pre><h3 id="安装文章字数统计插件-可选"><a href="#安装文章字数统计插件-可选" class="headerlink" title="安装文章字数统计插件(可选)"></a>安装文章字数统计插件(可选)</h3><p><strong>1、安装命令如下：</strong></p><pre class=" language-terminal"><code class="language-terminal">cnpm i --save hexo-wordcount</code></pre><p><strong>2、修改主题下的_config.yml 文件件内容如下：</strong></p><pre class=" language-yml"><code class="language-yml">postInfo:  date: true  update: false  wordCount: false # 设置文章字数统计为 true.  totalCount: false # 设置站点文章总字数统计为 true.  min2read: false # 阅读时长.  readCount: false # 阅读次数.</code></pre><h3 id="安装懒加载-建议"><a href="#安装懒加载-建议" class="headerlink" title="安装懒加载(建议)"></a>安装懒加载(建议)</h3><p><strong>1、全局安装懒加载插件，命令如下：</strong></p><pre class=" language-cmd"><code class="language-cmd">cnpm install hexo-lazyload-image --save</code></pre><p><strong>2、修改根目录下的_config.yml 文件件内容如下：</strong></p><pre class=" language-yml"><code class="language-yml"># hexo-lazyload-image## Docs: https://github.com/Troy-Yang/hexo-lazyload-imagelazyload:  enable: true  onlypost: false # 是否只对文章的图片做懒加载  loadingImg: ./source/images/loading.gif # eg ./images/loading.gif 自定义loading图片</code></pre><h3 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h3><p><strong>1、修改网站页脚信息</strong></p><ul><li>编辑 themes/hexo-theme-matery/layout/_partial/footer.ejs 文件，包括站点、使用的主题、访问量等。</li></ul><p><strong>2、修改社交链接</strong></p><ul><li>在主题的 _config.yml 文件中, 默认支持 QQ、GitHub 和邮箱的配置，可以在主题文件的 /layout/_partial/social-link.ejs 文件中，新增、修改需要的社交链接地址，增加链接可参考如下代码：</li></ul><pre class=" language-ejs"><code class="language-ejs"><a href="https://github.com/" class="tooltipped" target="_blank" data-tooltip="访问我的GitHub" data-position="top" data-delay="50">    <i class="fa fa-github"></i></a></code></pre><p><strong>3、CND 加速（建议）</strong></p><ul><li>放在 Github 的资源在国内加载速度比较慢，因此需要使用 CDN 加速来优化网站打开速度，jsDelivr + Github 便是免费且好用的 CDN，非常适合博客网站使用。也可以选择主流云服务商提供的对象存储+CDN 来获得更快速及稳定的访问效果，费用低到几乎可忽略。</li></ul><h3 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h3><p><strong>1、修改根目录下的_config.yml 文件件内容如下：</strong></p><pre class=" language-yml"><code class="language-yml"># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  - type: git    repo: https://github.com/willasas/willasas.github.io        branch: master        ignore_hidden: false    - type: git    repo: https://gitee.com/aclor/myblog        branch: master        ignore_hidden: false</code></pre><p><strong>2、先使用 git 初始化项目，然后安装自动化部署插件</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> init   <span class="token comment" spellcheck="true">#git初始化</span><span class="token function">git</span> remote add origin https://github.com/willasas/willasas.github.io.git  <span class="token comment" spellcheck="true">#建立连接</span><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save  <span class="token comment" spellcheck="true">#安装插件</span><span class="token function">npm</span> run deploy   <span class="token comment" spellcheck="true">#运行插件</span></code></pre><p><strong>3、运行自动化部署</strong></p><pre class=" language-bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g  <span class="token comment" spellcheck="true">#生成</span>hexo serve  <span class="token comment" spellcheck="true">#启动服务，在本地的4000端口查看预览效果</span><span class="token comment" spellcheck="true"># OR</span>gulp build  <span class="token comment" spellcheck="true">#自动化部署</span></code></pre><h3 id="部署到-Github"><a href="#部署到-Github" class="headerlink" title="部署到 Github"></a>部署到 Github</h3><p><strong>1、提交代码到 dev 分支</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> checkout -q -b dev  <span class="token comment" spellcheck="true">#创建并切换到dev分支</span><span class="token function">git</span> add <span class="token keyword">.</span><span class="token function">git</span> commit -m <span class="token string">"dev demo"</span><span class="token function">git</span> push --set-upstream origin dev  <span class="token comment" spellcheck="true">#设置本地分支追踪远程分支</span></code></pre><p><strong>2、提交代码到 master 分支</strong></p><pre class=" language-bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g  <span class="token comment" spellcheck="true">#重新生成代码</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> checkout master  <span class="token comment" spellcheck="true">#切换到master分支</span><span class="token function">git</span> add <span class="token keyword">.</span><span class="token function">git</span> commit -m <span class="token string">"master demo"</span><span class="token function">git</span> push --set-upstream origin master  <span class="token comment" spellcheck="true">#设置本地分支追踪远程分支</span></code></pre><p><strong>3、GitHub Page 部署</strong></p><ul><li>选择 your repository-》settings-》GitHub pages then copy your website address</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Website </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Plug-ins </tag>
            
            <tag> Website SEO </tag>
            
            <tag> Matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自适应导航页</title>
      <link href="/2020/07/31/flex-layout/"/>
      <url>/2020/07/31/flex-layout/</url>
      
        <content type="html"><![CDATA[<h2 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h2><ul><li>This is an example document</li></ul><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><ul><li>Add content…</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo项目结构</title>
      <link href="/2020/07/30/pt-structure/"/>
      <url>/2020/07/30/pt-structure/</url>
      
        <content type="html"><![CDATA[<h3 id="项目目录结构如下"><a href="#项目目录结构如下" class="headerlink" title="项目目录结构如下"></a>项目目录结构如下</h3><blockquote class="pullquote mindmap mindmap-md"><ul><li>.deploy_git #一键将博客同时部署到多个 git 仓库中</li><li>.github #github 自动化部署脚本</li><li>node_modules #插件依赖包管理文件</li><li>public #hexo 生成的静态页面（重点）</li><li>scaffolds #md 模板</li><li>source #网站内容资源文件（重点）<ul><li>_data #数据文件<ul><li>friend.json #友情链接文件</li></ul></li><li>_ports #文章源文件</li><li>about #关于菜单内容文件</li><li>categories #分类菜单内容文件</li><li>contact #留言板菜单内容文件</li><li>friends #友情链接菜单内容文件</li><li>images #文章内图片文件</li><li>movies #视频菜单内容文件</li><li>musics #音乐菜单内容文件</li><li>tags #标签菜单内容文件</li><li>404.md #页面报错文件</li></ul></li><li>theme #主题文件<ul><li>hexo-theme-matery #matery 主题文件夹<ul><li>languages #语言文件<ul><li>default.yml #默认语言</li><li>zh-CN.yml #简体中文</li></ul></li><li>layout #布局（所有的博客页面 HTML 和 JS 及 ejs 模板）<ul><li>_partial #公共页面（可以引入到 HTML 的任意位置）</li><li>_widget #公共页面（可以引入到 HTML 的任意位置）</li><li>其他 ejs 文件 #主菜单相关的 ejs 文件</li></ul></li><li>source #主题相关的文件<ul><li>css #主题样式文件</li><li>js #js 文件<ul><li>live2d_assets #live2d 源文件<ul><li>assets</li></ul></li><li>matery.js #主题 js 文件</li><li>sakura.js #樱花特效 js 文件</li><li>search.js #搜索 js 文件</li></ul></li><li>libs</li><li>medias #媒体资源文件<ul><li>banner #</li><li>featureimages #</li><li>reward #打赏二维码图片</li><li>logo.png #网站 logo</li></ul></li><li>favicon.png #网站 favicon（导航前的小图标）</li></ul></li><li>_config.yml #主题配置文件</li><li>.gitignore #git 版本控制文件</li><li>LICENSE #</li><li>README.md #主题使用说明</li></ul></li></ul></li><li>.git #项目 git 管理（提交内容等）</li><li>_config.yml #项目配置文件</li><li>.gitignore #项目 git 管理文件</li><li>db.json</li><li>gulpfile.js #静态资源压缩依赖文件</li><li>package.json #依赖包管理</li><li>package-lock.json #加锁的依赖包管理</li><li>README.md #网站说明</li></ul></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Project structure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中文链接转拼音和字数统计</title>
      <link href="/2020/07/30/wordcount-link/"/>
      <url>/2020/07/30/wordcount-link/</url>
      
        <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li><a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin 插件官网</a></li><li><a href="https://github.com/willin/hexo-wordcount">wordcount 插件官网</a></li></ul><h3 id="中文链接转拼音"><a href="#中文链接转拼音" class="headerlink" title="中文链接转拼音"></a>中文链接转拼音</h3><p><strong>1、安装插件</strong></p><pre class=" language-bash"><code class="language-bash">cnpm i hexo-permalink-pinyin --save</code></pre><p><strong>2、在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项</strong></p><pre class=" language-yml"><code class="language-yml"># hexo-permalink-pinyin## Docs: https://github.com/viko16/hexo-permalink-pinyinpermalink_pinyin:  enable: true  separator: '-' # default: '-'</code></pre><h3 id="文章字数统计"><a href="#文章字数统计" class="headerlink" title="文章字数统计"></a>文章字数统计</h3><p><strong>1、安装插件</strong></p><pre class=" language-bash"><code class="language-bash">cnpm i --save hexo-wordcount</code></pre><p><strong>2、在 matery 主题目录下的 _config.yml 文件中，新增以下的配置项</strong></p><pre class=" language-yml"><code class="language-yml"># 文章字数统计、阅读时长、总字数统计等# 文章信息--若要开启文章字数统计，需要安装 hexo-wordcount 插件，安装命令: `npm i --save hexo-wordcount`postInfo:  date: true # 发布日期  update: true # 更新日期  wordCount: true # 文章字数统计  totalCount: true # 站点总文章字数  min2read: true # 文章阅读时长  readCount: true # 文章阅读次数</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Plug-ins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chinese link to Pinyin </tag>
            
            <tag> Word count </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
